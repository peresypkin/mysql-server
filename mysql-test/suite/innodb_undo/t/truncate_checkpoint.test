--echo #
--echo # Show that up to 64 undo tablespaces can be truncated between checkpoints.
--echo #

# This test uses debug insertion points.
--source include/have_debug.inc

--source include/have_innodb_default_undo_tablespaces.inc

CREATE UNDO TABLESPACE undo_003 ADD DATAFILE 'undo_003.ibu';

SET GLOBAL DEBUG = "+d,ib_undo_trunc_checkpoint_off";

let $cnt = 0;
while ($cnt <= 64)
{
  ALTER UNDO TABLESPACE undo_003 SET INACTIVE;

  let $inactive_undo_space = undo_003;
  source include/wait_until_undo_space_is_empty.inc;

  ALTER UNDO TABLESPACE undo_003 SET ACTIVE;

  inc $cnt;
}

--echo #
--echo # A maximum of 64 old versions of these two undo tablespaces now exist.
--echo #
--error ER_DISALLOWED_OPERATION
ALTER UNDO TABLESPACE undo_003 SET INACTIVE;
SHOW WARNINGS;

--echo #
--echo # Do a checkpoint to clear the old undo tablespace files.
--echo #
SET GLOBAL DEBUG = "-d,ib_undo_trunc_checkpoint_off";
SET GLOBAL innodb_log_checkpoint_now=ON;
--sleep 1

--echo #
--echo # Truncate the explicit undo tablespaces 4 more times.
--echo #
let $cnt = 0;
while ($cnt < 4)
{
  ALTER UNDO TABLESPACE undo_003 SET INACTIVE;

  let $inactive_undo_space = undo_003;
  source include/wait_until_undo_space_is_empty.inc;

  ALTER UNDO TABLESPACE undo_003 SET ACTIVE;

  inc $cnt;
}

--echo #
--echo # Cleanup
--echo #

ALTER UNDO TABLESPACE undo_003 SET INACTIVE;

let $inactive_undo_space = undo_003;
source include/wait_until_undo_space_is_empty.inc;

DROP UNDO TABLESPACE undo_003;


